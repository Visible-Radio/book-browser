{"version":3,"sources":["components/FancyButton.js","components/BookCard.js","utils/sortMixedDateArray.js","components/CardWrapper.js","styles/PageNavStyles.js","components/PageNav.js","components/FilterOptions.js","components/Search.js","utils/sortingFuncs.js","App.js","utils/UseFetch.js","reportWebVitals.js","index.js"],"names":["FancyButton","styled","button","props","isOpen","BookCardStyles","div","color","BookCard","book","resultNumber","useState","setIsOpen","title","author","author_name","coverOLID","cover_edition_key","publishDate","publish_date","editionKey","edition_key","coverURL","sortedDates","map","dirtyDate","pubDate","String","dateString","dateValue","Date","parse","trim","slice","sort","a","b","elem","className","src","alt","Array","isArray","join","length","year","i","OLID","value","onClick","console","log","CardWrapperStyles","CardWrapper","children","PageNavStyles","nav","ButtonStyles","offset","PageNav","pageJump","changePage","currentPage","pageCount","disabled","FilterOptionsStyles","FilterOptions","setIsByFirstEdition","isByFirstEdition","sortMode","setSortMode","sortDirection","setSortDirection","setFilterIsOpen","optionsBtnRef","optionsRef","useRef","handleOutsideClick","event","current","contains","target","useEffect","window","addEventListener","removeEventListener","handleFirstEditionToggle","hanldeSortDirectionToggle","Number","ref","type","name","id","checked","onChange","htmlFor","SearchStyles","input","Search","onSearchChange","onSearchSubmit","searchString","setSearchString","filterIsOpen","defaultText","placeHolder","setPlaceHolder","onFocus","onBlur","placeholder","separateBooks","books","withoutDates","withDates","forEach","hasOwnProperty","push","App","AppStyles","setBooks","setCurrentPage","resultsPerPage","setPageCount","firstIndex","lastIndex","searchURL","setSearchURL","url","data","setData","loading","setLoading","fetch","then","resp","json","response","UseFetch","searchResults","loadingSearchResults","docs","Math","ceil","sortedBooks","booksWithoutDates","booksWithDates","publish_year","aIndex","bIndex","concat","sortBooksByDate","aTitle","toUpperCase","bTitle","sortBooksByTitle","q","split","destination","direction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEO,I,YAAMA,EAAcC,IAAOC,OAAV,+zBAiCN,SAAAC,GAAK,OAAIA,EAAMC,OAAS,SAAW,a,OC7B/CC,EAAiBJ,IAAOK,IAAV,q+CA0DI,SAAAH,GAAK,OAAIA,EAAMI,SAmHxBC,EA9FE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACxB,EAA8BC,oBAAS,GAAvC,mBAAQP,EAAR,KAAgBQ,EAAhB,KAWQC,EAAiHJ,EAAjHI,MAAoBC,EAA6FL,EAA1GM,YAAwCC,EAAkEP,EAArFQ,kBAA4CC,EAAyCT,EAAvDU,aAAwCC,EAAeX,EAA5BY,YAEvFC,EAAWN,EAAS,gDAA4CA,EAA5C,UAAgE,KAIpFO,EAAcL,EACG,YAAIA,GCjGEM,KAAI,SAAAC,GAC/B,IAAMC,EAAUC,OAAOF,GACvB,MAAO,CACLG,WAAYF,EACZG,UAAWC,KAAKC,MAAML,IAAYI,KAAKC,MAAML,EAAQM,OAAOC,OAAO,QAEpEC,MAAK,SAACC,EAAGC,GACV,OAAOD,EAAEN,UAAYO,EAAEP,aAEDL,KAAI,SAAAa,GAAI,OAAIA,EAAKT,cDyFrC,KAEJ,OACE,eAACvB,EAAD,CAAgBE,MAPJ,gBAOZ,UACI,sBAAK+B,UAAU,cAAf,UACIhB,GACA,qBAAKiB,IAAKjB,EAAUkB,IAAG,4BAAuB3B,MAE7CS,GACD,qBAAKgB,UAAU,mBAAf,SACE,4BACCzB,SAKT,qBAAIyB,UAAU,gBAAd,UACE,6BAAI,6BAAKzB,MACT,6BAAI,4BAAI4B,MAAMC,QAAQ5B,GAAUA,EAAO6B,KAAK,MAAQ7B,MAClDI,GAAeA,EAAY0B,OAAS,EAElC,qCACE,6BAAI,oDAAuB1B,GAAeK,EAAY,QACtD,6BAAI,0DAA6BL,GAAeK,EAAYA,EAAYqB,OAAS,QAC/E1B,EAAY0B,OAAS,GACrB,qCACE,6BAAI,uDAA0B1B,EAAY0B,OAAtC,oDACFxC,GACA,6BACCmB,EAAYC,KAAI,SAACqB,EAAMC,GACtB,OAAO,6BAAaD,GAAJC,cAO1B,6BAAI,4BAAI5B,GAAeK,EAAY,OAErCH,GACA,qCACE,6BACE,uDAA0BA,EAAWwB,OAArC,WAAqDxB,EAAWwB,OAAS,EAAI,IAAM,GAAnF,SAEAxC,GACA,+BACIgB,EAAWI,KAAI,SAACuB,EAAMD,GACtB,OAAO,oBAAmBE,MAAM,OAAOC,QAAS,kBAAMC,QAAQC,IAAIJ,IAA3D,SAAmEA,GAA1DD,EAAIC,MAKtB,qBAAIT,UAAU,QAAd,UACE,oJACA,2IACA,yDACA,4BAAG,uKAOf,sBAAKA,UAAU,cAAf,UACIpB,GAAeE,GACf,cAACpB,EAAD,CAAaiD,QA7EF,WACjBrC,GAAWR,IA4E6BA,OAAQA,IAE5C,sBACA,4CAAeM,EAAa,YE3K9B0C,EAAoBnD,IAAOK,IAAV,0KAmBR+C,EARK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,cAACF,EAAD,UACGE,KCdMC,EAAgBtD,IAAOuD,IAAV,2UAoBbC,EAAexD,IAAOC,OAAV,goBACrB,SAAAC,GAAK,OAAIA,EAAMuD,OAAS,+BAAiC,QA4BvD,SAAAvD,GAAK,OAAIA,EAAMuD,OAAS,+BAAiC,iCCpChDC,EAbC,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACpD,OACE,eAACR,EAAD,WACE,cAACE,EAAD,CAAcC,OAAQ,OAAQV,MAAO,QAASC,QAASW,EAAUI,SAA0B,IAAhBF,IAAqB,EAAhG,mBACA,cAACL,EAAD,CAAcC,OAAQ,OAAQV,OAAQ,EAAGC,QAASY,EAAYG,SAA0B,IAAhBF,IAAqB,EAA7F,sBACA,8BACE,yCAAYA,EAAc,EAA1B,OAAiCC,OAEnC,cAACN,EAAD,CAAcC,OAAQ,OAAQV,MAAO,EAAGC,QAASY,EAAaG,SAAUF,IAAgBC,EAAY,IAAK,EAAzG,kBACA,cAACN,EAAD,CAAcC,OAAQ,OAAQV,MAAO,MAAOC,QAASW,EAAUI,SAAUF,IAAgBC,EAAY,IAAK,EAA1G,sBCRAE,EAAsBhE,IAAOK,IAAV,2qBAiJV4D,EA3GO,SAAC,GAAuI,IAArIC,EAAoI,EAApIA,oBAAqBC,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,SAAUC,EAAmF,EAAnFA,YAAaC,EAAsE,EAAtEA,cAAeC,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cAEjIC,EAAaC,iBAAO,MAEpBC,EAAqB,SAACC,GAEtBH,EAAWI,SAAWJ,EAAWI,QAAQC,SAASF,EAAMG,SACxDP,EAAcK,SAAWL,EAAcK,UAAYD,EAAMG,QAC7DR,GAAgB,IAGlBS,qBAAU,WAER,OADAC,OAAOC,iBAAiB,YAAaP,GAC9B,WACLM,OAAOE,oBAAoB,YAAaR,OAI5C,IAAMS,EAA2B,WAC/BnB,GAAqBC,IAGjBmB,EAA4B,SAACT,GACjCN,EAAiBgB,OAAOV,EAAMG,OAAOjC,QACrCsB,EAAY,SAOd,OACE,eAACL,EAAD,CAAqBwB,IAAKd,EAA1B,UACE,iCACE,gDACA,gCACE,uBACEe,KAAK,QACLC,KAAK,aACL3C,MAAM,QACN4C,GAAG,UACHC,QAAsB,UAAbxB,EACTyB,SAfmB,WAC3BxB,EAAyB,SAAbD,EAAsB,QAAU,WAgBtC,uBAAO0B,QAAQ,UAAf,yBAEF,gCACE,uBACEL,KAAK,QACLC,KAAK,aACL3C,OAAQ,EACR4C,GAAG,cACHC,QAAsB,SAAbxB,IAA0C,IAAnBE,EAChCuB,SAAUP,IAEZ,uBAAOQ,QAAQ,cAAf,0CAEF,gCACE,uBACEL,KAAK,QACLC,KAAK,aACL3C,MAAO,EACP4C,GAAG,cACHC,QAAsB,SAAbxB,GAAyC,IAAlBE,EAChCuB,SAAUP,IAEZ,uBAAOQ,QAAQ,aAAf,6CAGa,SAAb1B,GACA,+BACE,sBAAK/B,UAAU,cAAf,UACE,2EACA,uIAIA,0FACA,gCACE,uBACEwD,SAAUR,EACVI,KAAK,QACLC,KAAK,aACL3C,OAAO,EACP4C,GAAG,oBACHC,SAAUzB,IAEZ,uBAAO2B,QAAQ,aAAf,sCAEF,gCACE,uBACED,SAAUR,EACVI,KAAK,QACLC,KAAK,aACL3C,OAAO,EACP4C,GAAG,mBACHC,QAASzB,IAEX,uBAAO2B,QAAQ,aAAf,2CCnIVC,EAAe/F,IAAOgG,MAAV,iUA4EHC,EA3DA,SAAC,GAWT,IAVLC,EAUI,EAVJA,eACAC,EASI,EATJA,eACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,gBACAnC,EAMI,EANJA,oBACAC,EAKI,EALJA,iBACAG,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAH,EAEI,EAFJA,SACAC,EACI,EADJA,YAEA,EAAyC3D,oBAAS,GAAlD,mBAAQ4F,EAAR,KAAsB9B,EAAtB,KACM+B,EAAc,oBACpB,EAAwC7F,mBAAS6F,GAAjD,mBAAQC,EAAR,KAAqBC,EAArB,KAEMhC,EAAgBE,iBAAO,MAe7B,OACE,eAAC,EAAD,WACE,cAACoB,EAAD,CACEhD,MAAOqD,EACPX,KAAK,SACLI,SAAUK,EACVQ,QAnBc,WAClBL,EAAgB,IAChBI,EAAe,KAkBXE,OAXc,WAClBF,EAAeF,IAWXK,YAAaJ,IAEf,cAAChD,EAAD,CAAcR,QAASmD,EAAvB,oBACA,cAAC3C,EAAD,CAAcR,QAnBO,WACvBwB,GAAiB8B,IAkB0Bd,IAAKf,EAA9C,qBACC6B,GACC,cAAC,EAAD,CACEpC,oBAAqBA,EACrBC,iBAAkBA,EAClBG,cAAeA,EACfC,iBAAkBA,EAClBH,SAAUA,EACVC,YAAaA,EACbG,gBAAiBA,EACjBC,cAAeA,QCxDZoC,EAAgB,SAACC,GAC5B,IAAMC,EAAe,GACfC,EAAY,GAIlB,OAHAF,EAAMG,SAAQ,SAAAzG,GACZA,EAAK0G,eAAe,gBAAkBF,EAAUG,KAAK3G,GAAQuG,EAAaI,KAAK3G,MAE1E,CAACuG,EAAcC,I,yBC+DTI,I,IAAAA,EA7Ef,YAA6B,IAAdC,EAAa,EAAbA,UAIb,EAA4B3G,mBAAS,IAArC,mBAAQoG,EAAR,KAAeQ,EAAf,KACA,EAAwC5G,mBAAS,GAAjD,mBAAQmD,EAAR,KAAqB0D,EAArB,KACA,EAA0B7G,mBAAS,IAA3B8G,EAAR,oBACA,EAAoC9G,mBAAS,MAA7C,mBAAQoD,EAAR,KAAmB2D,EAAnB,KACMC,EAAa7D,EAAc2D,EAC3BG,EAAYD,EAAaF,EAC/B,EAAkC9G,mBAAS,QAA3C,mBAAQ0D,EAAR,KAAkBC,EAAlB,KACA,EAA4C3D,oBAAU,GAAtD,mBAAQ4D,EAAR,KAAuBC,EAAvB,KACA,EAAkD7D,oBAAS,GAA3D,mBAAQyD,EAAR,KAA0BD,EAA1B,KACA,EAA0CxD,mBAAS,oBAAnD,mBAAQ0F,EAAR,KAAsBC,EAAtB,KACA,EAAoC3F,mBAZjB,6EAYnB,mBAAQkH,EAAR,KAAmBC,EAAnB,KACA,EC1Ba,SAAkBC,GAM/B,MAA0BpH,mBAAS,IAAnC,mBAAQqH,EAAR,KAAcC,EAAd,KACA,EAA+BtH,oBAAS,GAAxC,mBAAQuH,EAAR,KAAiBC,EAAjB,KAWA,OATAjD,qBAAU,WACR,sBAAC,4BAAA/C,EAAA,6DACCgG,GAAW,GADZ,SAEwBC,MAAML,GAAKM,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAFrD,OAEOC,EAFP,OAGCP,EAAQO,GACRL,GAAW,GAJZ,0CAAD,KAMA,CAACJ,IAEI,CAAEC,EAAME,GDQiCO,CAASZ,GAAzD,mBAAQa,EAAR,KAAuBC,EAAvB,KAWAzD,qBAAU,WACHyD,IACHpB,EAASmB,EAAcE,MACvBlB,EAAamB,KAAKC,KAAKJ,EAAcE,KAAKhG,OAAS6E,OAErD,CAACkB,EAAsBlB,EAAgBiB,EAAcE,OAEvD,IAcMG,EAA4B,SAAb1E,ED5DQ,SAAC0C,EAAOxC,EAAeH,GAIpD,MAA8C0C,EAAcC,GAA5D,mBAAQiC,EAAR,KAA2BC,EAA3B,KACA,OAAO,YAAKA,GAAgB/G,MAAK,SAACC,EAAGC,GACnC,GAAID,EAAE+G,cAAgB9G,EAAE8G,aAAc,CACpC,IAAMC,EAAS/E,EAAmB,EAAIjC,EAAE+G,aAAatG,OAAS,EACxDwG,EAAShF,EAAmB,EAAIhC,EAAE8G,aAAatG,OAAS,EAC9D,OACG4C,OAAOrD,EAAE+G,aAAahH,OAAOiH,IAC5B3D,OAAOpD,EAAE8G,aAAahH,OAAOkH,KAC7B7E,EAIJ,OAAO,KAER8E,OAAOL,GC2CNM,CAAgBvC,EAAOxC,EAAeH,GD/BZ,SAAC2C,GAC/B,OAAO,YAAIA,GAAO7E,MAAK,SAACC,EAAGC,GACzB,IAAMmH,EAASpH,EAAEtB,MAAM2I,cACjBC,EAASrH,EAAEvB,MAAM2I,cACvB,OAAOD,EAASE,GAAU,EAAIF,EAASE,EAAS,EAAI,KC4BlDC,CAAiB3C,GAErB,OACE,eAACO,EAAD,WACE,cAAC,EAAD,CACEnB,eArCiB,SAACrB,GACtBwB,EAAgBxB,EAAMG,OAAOjC,QAqCzBoD,eAlCiB,WACrB,IAAMuD,EAAItD,EAAarE,OAAO4H,MAAM,KAAKjH,KAAK,KAC9CmF,EAAa,yCAAD,OAA0C6B,EAA1C,yBAiCRtD,aAAcA,EACdC,gBAAkBA,EAClBnC,oBAAqBA,EACrBC,iBAAkBA,EAClBG,cAAeA,EACfC,iBAAkBA,EAClBH,SAAUA,EACVC,YAAaA,IAEf,cAAC,EAAD,UAEIyE,EAAY9G,MAAM0F,EAAYC,GAAWpG,KAAI,SAACf,EAAMqC,GAClD,OAAO,cAAC,EAAD,CAAUpC,aAAcoC,EAAI6E,EAAYlH,KAAMA,GAAWqC,QAItE,cAAC,EAAD,CAASc,SA9BI,SAACkB,GAChB,IAAM+E,EAAqC,UAAvB/E,EAAMG,OAAOjC,MAAoB,EAAIe,EAAY,EACrEyD,EAAeqC,IA4BgBhG,WAvCd,SAACiB,GAClB,IAAMgF,EAAYtE,OAAOV,EAAMG,OAAOjC,QAClCc,EAAcC,EAAY,GAAmB,IAAd+F,GAEvBhG,EAAc,IAAoB,IAAfgG,IAD7BtC,EAAe1D,EAAcgG,IAoCwB/F,UAAWA,EAAWD,YAAaA,QEzE/EiG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCARO,EAAeC,YAAH,u+BA+CZlD,EAAYrH,IAAOK,IAAV,kNAWfmK,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,CAAKjD,UAAWA,OAElBsD,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.47cbe11c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FancyButton = styled.button`\n  position: relative;\n  width: 2.5rem;\n  height: 2.5rem;\n  margin: 0.75rem;\n  align-self: start;\n  border: none;\n  font-size: 2.5rem;\n  padding: 0;\n  background-color: transparent;\n  transition: all 0.2s;\n\n  &::after, &::before {\n    content: '';\n    display: inline-block;\n    background-color: var(--textCol);\n    position: absolute;\n  }\n\n  // horizontal\n  &::after {\n    top: 16px;\n    left: 3px;\n    width: 2rem;\n    height: 0.4rem;\n  }\n\n  // vertical\n  &::before {\n    top: 3px;\n    left: 16px;\n    width: 0.4rem;\n    height: 2rem;\n    visibility: ${props => props.isOpen ? 'hidden' : 'visible'};\n  }\n\n  &:focus {\n    outline: 2px solid var(--textCol);\n  }\n\n  &:hover {\n    cursor: pointer;\n    filter: brightness(2.25);\n    background: none;\n  }\n\n  &:active {\n    transform: scale(0.5);\n  }\n\n`;","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport sortMixedDateArray from \"../utils/sortMixedDateArray\";\n// import EditionCard from \"./EditionCard\";\nimport { FancyButton } from \"./FancyButton\";\n\nconst BookCardStyles = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 1rem;\n\n  background-color: var(--backgroundColBright);\n  color: var(--textCol);\n  box-shadow: var(--boxShadow);\n  padding: var(--pad);\n  border-radius: var(--borad);\n\n  min-height: fit-content;\n  margin:  0 0 1rem 0;\n  width: 100%;\n\n  img {\n    width: 180px;\n    max-height: 270px;\n    height: auto;\n    object-fit: cover;\n    box-shadow: var(--boxShadow);\n  }\n\n  .bookWrapper {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    height: fit-content;\n    max-width: 180px;\n    max-height: 270px;\n  }\n\n  .wrapperColumn {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    h3 {\n      margin-top: 0;\n    }\n  }\n\n  .rightColumn {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  p {\n    margin: 0.25rem 0;\n  }\n\n  .imagePlaceHolder {\n    width: 180px;\n    height: 270px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${props => props.color};\n    color: var(--backgroundCol);\n    font-weight: 700;\n    padding: 0.5rem;\n    font-size: 0.75rem;\n    box-shadow: var(--boxShadow);\n  }\n\n  .imSad {\n    background-color: black;\n    color: white;\n    border-radius: var(--borad);\n    padding: 1rem;\n    margin-top: 1rem;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst BookCard = ({ book, resultNumber }) => {\n  const [ isOpen, setIsOpen ] = useState(false);\n  // const [ viewEditions, setViewEditions] = useState(false);\n\n  // const toggleViewEditions = () => {\n  //   setViewEditions(!viewEditions);\n  // }\n\n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  }\n\n  const { title, author_name: author, cover_edition_key: coverOLID, publish_date: publishDate, edition_key: editionKey } = book;\n\n  const coverURL = coverOLID ? `https://covers.openlibrary.org/b/olid/${coverOLID}-M.jpg` : null;\n\n  const color = 'rgb(30,40,50)';\n\n  const sortedDates = publishDate\n    ? sortMixedDateArray([...publishDate])\n    : null;\n\n  return (\n    <BookCardStyles color={color}>\n        <div className=\"bookWrapper\">\n          { coverURL &&\n            <img src={coverURL} alt={`Cover of the book ${title}`}></img>\n          }\n          { !coverURL &&\n            <div className=\"imagePlaceHolder\">\n              <p>\n              {title}\n              </p>\n            </div>\n          }\n        </div>\n      <ul className=\"wrapperColumn\">\n        <li><h3>{title}</h3></li>\n        <li><p>{Array.isArray(author) ? author.join(', ') : author}</p></li>\n        { publishDate && publishDate.length > 1\n          ?\n            <>\n              <li><p>First publication: {publishDate && sortedDates[0]}</p></li>\n              <li><p>Most Recent publication: {publishDate && sortedDates[sortedDates.length - 1]}</p></li>\n              { publishDate.length > 2 &&\n                <>\n                  <li><p>This record refers to {publishDate.length} publication dates. Click + to see them all.</p></li>\n                  { isOpen &&\n                    <ul>\n                    {sortedDates.map((year, i) => {\n                      return <li key={i}>{year}</li>\n                    })}\n                    </ul>\n                  }\n                </>\n              }\n            </>\n          : <li><p>{publishDate && sortedDates[0]}</p></li>\n        }\n        { editionKey &&\n          <>\n            <li>\n              <p>This record refers to {editionKey.length} edition{editionKey.length > 1 ? 's' : ''}.</p>\n            </li>\n            { isOpen &&\n              <ul>\n                { editionKey.map((OLID, i) => {\n                  return <li key={i + OLID} value=\"OLID\" onClick={() => console.log(OLID)}>{OLID}\n                      {/* <EditionCard OLID={OLID}/> */}\n                    </li>\n                  })\n                }\n                <li className=\"imSad\">\n                  <p>The API endpoint that serves data for specific edition IDs has not set the Access-Control-Allow-Origin CORS header.</p>\n                  <p>Without building some middleware I cannot access the data necessary to render cards for specific editions.</p>\n                  <p>Try this in the console:</p>\n                  <p><code>fetch(\"https://openlibrary.org/api/volumes/brief/olid/OL30597611M.json\").then(resp => resp.json()).then(console.log);</code></p>\n                </li>\n              </ul>\n            }\n          </>\n        }\n      </ul>\n      <div className=\"rightColumn\">\n        { publishDate && editionKey &&\n          <FancyButton onClick={toggleOpen} isOpen={isOpen}/>\n        }\n        <p></p>\n        <p>Result no. {resultNumber+1}</p>\n      </div>\n    </BookCardStyles>\n  )\n}\n\nexport default BookCard\n","export default function sortMixedDateArray (arr) {\n  // input array contains years like '1998', and dates like 'June 5, 2007'\n  // also you could see \"June 1940\" - which will return NaN if passed to Date.parse()\n  // or 1940 June - which makes this whole thing a little challenging.\n  // convert them all to objects, attach a property to each that is a date object\n  // sort them by their date object properties\n  // only render the initial string\n  const mixedDatesSorted = arr.map(dirtyDate => {\n    const pubDate = String(dirtyDate);\n    return {\n      dateString: pubDate,\n      dateValue: Date.parse(pubDate) || Date.parse(pubDate.trim().slice(-4))\n    }\n  }).sort((a, b) => {\n    return a.dateValue - b.dateValue;\n  })\n  return mixedDatesSorted.map(elem => elem.dateString);\n}","import styled from \"styled-components\"\n\nconst CardWrapperStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 0;\n  padding: 1rem;\n  overflow-y: scroll;\n\n`;\n\nconst CardWrapper = ({ children }) => {\n  return (\n    <CardWrapperStyles>\n      {children}\n    </CardWrapperStyles>\n  )\n}\n\nexport default CardWrapper\n","import styled from \"styled-components\";\n\nexport const PageNavStyles = styled.nav`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  border-top: 2px solid var(--myGrey);\n\n  div {\n    width: 8rem;\n    display: flex;\n    justify-content: center;\n  }\n\n  span {\n    min-width: max-content;\n  }\n`;\n\nexport const ButtonStyles = styled.button`\n  ${props => props.offset ? 'transform: translateY(-62%);' : null};\n  border: 2px solid var(--textCol);\n  background-color: var(--backgroundColBright);\n  font-size: 1rem;\n  font-family: 'Raleway', sans-serif;\n  padding: 1rem;\n  margin: 0.5rem;\n  border-radius: var(--borad);\n  transition: all 0.25s;\n  width: 7rem;\n  box-shadow: var(--boxShadow);\n\n  &:disabled {\n    filter: contrast(0.15) brightness(1.2);\n  }\n\n  &:hover:not(:disabled) {\n    cursor: pointer;\n    background-color: var(--textCol);\n    color: var(--backgroundCol);\n  }\n\n  &:focus {\n    outline: 2px solid var(--textCol);\n    outline-offset: 2px;\n  }\n\n  &:active {\n    ${props => props.offset ? 'transform: translateY(-50%);' : 'transform: translateY(10%);'};\n  }\n`;\n\n","import { ButtonStyles, PageNavStyles } from \"../styles/PageNavStyles\"\n\nconst PageNav = ({ pageJump, changePage, currentPage, pageCount}) => {\n  return (\n    <PageNavStyles>\n      <ButtonStyles offset={\"true\"} value={'start'} onClick={pageJump} disabled={currentPage === 0 && true}>First</ButtonStyles>\n      <ButtonStyles offset={\"true\"} value={-1} onClick={changePage} disabled={currentPage === 0 && true}>Previous</ButtonStyles>\n      <div>\n        <span>Page {currentPage + 1} of {pageCount}</span>\n      </div>\n      <ButtonStyles offset={\"true\"} value={1} onClick={changePage } disabled={currentPage === pageCount - 1 && true}>Next</ButtonStyles>\n      <ButtonStyles offset={\"true\"} value={'end'} onClick={pageJump} disabled={currentPage === pageCount - 1 && true}>Last</ButtonStyles>\n    </PageNavStyles>\n  )\n}\nexport default PageNav\n","import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst FilterOptionsStyles = styled.div`\n  background-color: var(--backgroundCol);\n  top: 100%;\n  position: absolute;\n  min-width: 320px;\n  border: 2px solid var(--textCol);\n  box-shadow: var(--boxShadow);\n  padding: var(--pad);\n  border-radius: var(--borad);\n  display: flex;\n  flex-flow: row wrap;\n  z-index: 2;\n\n  form {\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n  }\n\n  label {\n    min-width: max-content;\n  }\n\n  div {\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  input[type=\"radio\"] {\n    width: 2rem;\n    height: 2rem;\n  }\n`;\n\nconst FilterOptions = ({ setIsByFirstEdition, isByFirstEdition, sortMode, setSortMode, sortDirection, setSortDirection, setFilterIsOpen, optionsBtnRef }) => {\n\n  const optionsRef = useRef(null);\n\n  const handleOutsideClick = (event) => {\n    // close list on click outside of component\n    if (optionsRef.current && optionsRef.current.contains(event.target)) return;\n    if (optionsBtnRef.current && optionsBtnRef.current === event.target) return;\n    setFilterIsOpen(false);\n  }\n\n  useEffect(()=> {\n    window.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleOutsideClick);\n    }\n  });\n\n  const handleFirstEditionToggle = () => {\n    setIsByFirstEdition(!isByFirstEdition);\n  };\n\n  const hanldeSortDirectionToggle = (event) => {\n    setSortDirection(Number(event.target.value));\n    setSortMode('date');\n  }\n\n  const handleSortModeToggle = () => {\n    setSortMode(sortMode === 'date' ? 'title' : 'date');\n  }\n\n  return (\n    <FilterOptionsStyles ref={optionsRef}>\n      <form>\n        <h3>Filter Options</h3>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"filterType\"\n            value=\"title\"\n            id=\"byTitle\"\n            checked={sortMode === 'title'}\n            onChange={handleSortModeToggle}\n          ></input>\n          <label htmlFor=\"byTitle\">By title</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"filterType\"\n            value={-1}\n            id=\"newestFirst\"\n            checked={sortMode === 'date' && sortDirection === -1}\n            onChange={hanldeSortDirectionToggle}\n          ></input>\n          <label htmlFor=\"newestFirst\">Newest publications first</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"filterType\"\n            value={1}\n            id=\"oldestFirst\"\n            checked={sortMode === 'date' && sortDirection === 1}\n            onChange={hanldeSortDirectionToggle}\n          ></input>\n          <label htmlFor=\"filterType\">Oldest publications first</label>\n        </div>\n      </form>\n        { sortMode === 'date' &&\n          <form>\n            <div className=\"dateOptions\">\n              <p>Some books have been published many times.</p>\n              <p>\n                Woud you like to use their oldest publication date or their most\n                recent publication date when sorting?\n              </p>\n              <p>This can be useful for finding new releases of old books.</p>\n              <div>\n                <input\n                  onChange={handleFirstEditionToggle}\n                  type=\"radio\"\n                  name=\"filterType\"\n                  value={false}\n                  id=\"!isByFirstEdition\"\n                  checked={!isByFirstEdition}\n                ></input>\n                <label htmlFor=\"filterType\">Use their most recent</label>\n              </div>\n              <div>\n                <input\n                  onChange={handleFirstEditionToggle}\n                  type=\"radio\"\n                  name=\"filterType\"\n                  value={true}\n                  id=\"isByFirstEdition\"\n                  checked={isByFirstEdition}\n                ></input>\n                <label htmlFor=\"filterType\">User their oldest</label>\n              </div>\n            </div>\n          </form>\n        }\n    </FilterOptionsStyles>\n  );\n};\n\nexport default FilterOptions;\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  ButtonStyles,\n  PageNavStyles as SearchOuterStyles,\n} from \"../styles/PageNavStyles\";\nimport FilterOptions from \"./FilterOptions\";\n\nconst SearchStyles = styled.input`\n  border: 2px solid var(--textCol);\n  margin: 0;\n  font-size: 1rem;\n  padding: 0.25rem 0.5rem 0.25rem 0.5rem;\n  border-radius: var(--borad);\n\n  &:focus {\n    outline-offset: 2px;\n    outline: 2px solid var(--textCol);\n  }\n\n  @media (max-width: 500px) {\n    min-height: 44px;\n  }\n`;\n\nconst Search = ({\n  onSearchChange,\n  onSearchSubmit,\n  searchString,\n  setSearchString,\n  setIsByFirstEdition,\n  isByFirstEdition,\n  sortDirection,\n  setSortDirection,\n  sortMode,\n  setSortMode\n}) => {\n  const [ filterIsOpen, setFilterIsOpen] = useState(false);\n  const defaultText = 'Search for a book'\n  const [ placeHolder, setPlaceHolder ] = useState(defaultText);\n\n  const optionsBtnRef = useRef(null);\n\n  const handleFocus = () => {\n    setSearchString(\"\");\n    setPlaceHolder(\"\");\n  };\n\n  const toggleFilterOpen = () => {\n    setFilterIsOpen(!filterIsOpen);\n  };\n\n  const onInputBlur = () => {\n    setPlaceHolder(defaultText)\n  }\n\n  return (\n    <SearchOuterStyles>\n      <SearchStyles\n        value={searchString}\n        type=\"search\"\n        onChange={onSearchChange}\n        onFocus={handleFocus}\n        onBlur={onInputBlur}\n        placeholder={placeHolder}\n      ></SearchStyles>\n      <ButtonStyles onClick={onSearchSubmit}>Search</ButtonStyles>\n      <ButtonStyles onClick={toggleFilterOpen} ref={optionsBtnRef}>Options</ButtonStyles>\n      {filterIsOpen && (\n        <FilterOptions\n          setIsByFirstEdition={setIsByFirstEdition}\n          isByFirstEdition={isByFirstEdition}\n          sortDirection={sortDirection}\n          setSortDirection={setSortDirection}\n          sortMode={sortMode}\n          setSortMode={setSortMode}\n          setFilterIsOpen={setFilterIsOpen}\n          optionsBtnRef={optionsBtnRef}\n        />\n      )}\n    </SearchOuterStyles>\n  );\n};\n\nexport default Search;\n","export const sortBooksByDate = (books, sortDirection, isByFirstEdition) => {\n  // Some books don't have a publish year property\n  // Pull those out before sorting\n  // And then include them at the end of the sorted array\n  const [ booksWithoutDates, booksWithDates ] = separateBooks(books);\n  return [ ...booksWithDates].sort((a, b) => {\n    if (a.publish_year && b.publish_year) {\n      const aIndex = isByFirstEdition ? 0 : a.publish_year.length - 1;\n      const bIndex = isByFirstEdition ? 0 : b.publish_year.length - 1;\n      return (\n        (Number(a.publish_year.sort()[aIndex])\n        - Number(b.publish_year.sort()[bIndex]))\n        * sortDirection\n      );\n    } else {\n      // this shouldn't happen, we pulled out the ones without dates\n      return 0;\n    }\n  }).concat(booksWithoutDates)\n}\n\nexport const separateBooks = (books) => {\n  const withoutDates = [];\n  const withDates = [];\n  books.forEach(book => {\n    book.hasOwnProperty('publish_year') ? withDates.push(book) : withoutDates.push(book)\n  })\n  return [withoutDates, withDates ];\n}\n\nexport const sortBooksByTitle = (books) => {\n  return [...books].sort((a, b) => {\n    const aTitle = a.title.toUpperCase();\n    const bTitle = b.title.toUpperCase();\n    return aTitle < bTitle ? -1 : aTitle > bTitle ? 1 : 0;\n  });\n}\n\n\n\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport BookCard from './components/BookCard';\nimport CardWrapper from './components/CardWrapper';\nimport PageNav from './components/PageNav';\nimport Search from './components/Search';\nimport { sortBooksByDate, sortBooksByTitle } from './utils/sortingFuncs';\nimport UseFetch from './utils/UseFetch';\n\n// the ISBN endpoint provided in the specs has CORS issues when a request is made from the browser\n// const url_ISBN = `http://openlibrary.org/api/volumes/brief/isbn/${isbn}.json`;\n// const proxy = \"https://cors-anywhere.herokuapp.com/\";\n\nfunction App({ AppStyles }) {\n\n  const defaultURL = \"https://openlibrary.org/search.json?q=the+great+gatsby&limit=100&offset=0\";\n\n  const [ books, setBooks ] = useState([]);\n  const [ currentPage, setCurrentPage ] = useState(0);\n  const [ resultsPerPage] = useState(10);\n  const [ pageCount, setPageCount ] = useState(null);\n  const firstIndex = currentPage * resultsPerPage;\n  const lastIndex = firstIndex + resultsPerPage;\n  const [ sortMode, setSortMode ] = useState('date')\n  const [ sortDirection, setSortDirection ] = useState(-1);\n  const [ isByFirstEdition, setIsByFirstEdition ] = useState(true);\n  const [ searchString, setSearchString ] = useState('the great gatsby');\n  const [ searchURL, setSearchURL ] = useState(defaultURL);\n  const [ searchResults, loadingSearchResults ] = UseFetch(searchURL);\n\n  const onSearchChange = (event) => {\n    setSearchString(event.target.value);\n  }\n\n  const onSearchSubmit = () => {\n    const q = searchString.trim().split(' ').join('+');\n    setSearchURL(`https://openlibrary.org/search.json?q=${q}&limit=100&offset=0`);\n  }\n\n  useEffect(() => {\n    if (!loadingSearchResults) {\n      setBooks(searchResults.docs);\n      setPageCount(Math.ceil(searchResults.docs.length / resultsPerPage));\n    }\n  },[loadingSearchResults, resultsPerPage, searchResults.docs]);\n\n  const changePage = (event) => {\n    const direction = Number(event.target.value);\n    if (currentPage < pageCount - 1 && direction === 1) {\n      setCurrentPage(currentPage + direction);\n    } else if ( currentPage > 0 && direction === -1 ) {\n      setCurrentPage(currentPage + direction);\n    }\n  }\n\n  const pageJump = (event) => {\n    const destination = event.target.value === 'start' ? 0 : pageCount - 1;\n    setCurrentPage(destination);\n  }\n\n  const sortedBooks = (sortMode === 'date')\n    ? sortBooksByDate(books, sortDirection, isByFirstEdition)\n    : sortBooksByTitle(books);\n\n  return (\n    <AppStyles>\n      <Search\n        onSearchChange={onSearchChange}\n        onSearchSubmit={onSearchSubmit}\n        searchString={searchString}\n        setSearchString ={setSearchString}\n        setIsByFirstEdition={setIsByFirstEdition}\n        isByFirstEdition={isByFirstEdition}\n        sortDirection={sortDirection}\n        setSortDirection={setSortDirection}\n        sortMode={sortMode}\n        setSortMode={setSortMode}\n      />\n      <CardWrapper>\n        {\n          sortedBooks.slice(firstIndex, lastIndex).map((book, i) => {\n            return <BookCard resultNumber={i + firstIndex} book={book} key={i} />\n          })\n        }\n      </CardWrapper>\n      <PageNav pageJump={pageJump} changePage={changePage} pageCount={pageCount} currentPage={currentPage}/>\n    </AppStyles>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default function UseFetch(url) {\n  // in development route requests through here...ugh.\n  // https://cors-anywhere.herokuapp.com/\n  // also found this endpoint which doesn't have cors issues\n  // const byISBN = `https://openlibrary.org/isbn/${isbn}.json`;\n\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const response = await fetch(url).then(resp => resp.json());\n      setData(response);\n      setLoading(false);\n    })();\n  },[url])\n\n  return [ data, loading ];\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --backgroundCol: rgb(220,220,220);\n    --backgroundColBright: rgb(240,240,240);\n    --textCol: rgb(60,60,60);\n    --myGrey: rgb(190,190,190);\n    --boxShadow: 0 0 2px 2px rgba(0,0,0,0.1), 3px 3px 3px 3px rgba(0,0,0,0.2);\n    --pad: 2rem;\n    --borad: 2rem;\n    --maxWidth: 1200px;\n  }\n\n  html, body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background: var(--backgroundCol);\n    color: var(--textCol);\n    font-family: 'Raleway', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst AppStyles = styled.div`\n  width: 100vw;\n  height: 100vh;\n  max-width: var(--maxWidth);\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  grid-template-columns: 1fr;\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App AppStyles={AppStyles}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}