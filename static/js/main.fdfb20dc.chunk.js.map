{"version":3,"sources":["utils/UseFetch.js","components/FancyButton.js","components/BookCard.js","utils/sortMixedDateArray.js","components/CardWrapper.js","styles/PageNavStyles.js","components/PageNav.js","App.js","utils/separateBooks.js","reportWebVitals.js","index.js"],"names":["UseFetch","url","useState","data","setData","loading","setLoading","useEffect","a","fetch","then","resp","json","response","FancyButton","styled","button","props","isOpen","BookCardStyles","div","color","BookCard","book","resultNumber","setIsOpen","title","author","author_name","coverOLID","publish_year","cover_edition_key","publishDate","publish_date","editionKey","edition_key","coverURL","sortedDates","map","string","dateString","dateValue","Date","parse","trim","slice","sort","b","elem","className","src","alt","Array","isArray","join","length","year","i","OLID","value","onClick","console","log","CardWrapperStyles","CardWrapper","children","PageNavStyles","nav","PageNav","pageJump","changePage","currentPage","pageCount","disabled","App","AppStyles","searchResults","loadingSearchResults","books","setBooks","setCurrentPage","resultsPerPage","setPageCount","firstIndex","lastIndex","sortDirection","isByFirstEdition","docs","Math","ceil","withoutDates","withDates","forEach","hasOwnProperty","push","separateBooks","booksWithoutDates","booksWithDates","sortedBooks","aIndex","bIndex","Number","concat","event","destination","target","direction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdfb20dc.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function UseFetch(url) {\n  // in development route requests through here...ugh.\n  // https://cors-anywhere.herokuapp.com/\n  // also found this endpoint which doesn't have cors issues\n  // const byISBN = `https://openlibrary.org/isbn/${isbn}.json`;\n\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const response = await fetch(url).then(resp => resp.json());\n      setData(response);\n      setLoading(false);\n    })();\n  },[url])\n\n  return [ data, loading ];\n}","import styled from \"styled-components\";\n\nexport const FancyButton = styled.button`\n  position: relative;\n  width: 2.5rem;\n  height: 2.5rem;\n  margin: 0.75rem;\n  align-self: start;\n  border: none;\n  font-size: 2.5rem;\n  padding: 0;\n  background-color: transparent;\n  transition: all 0.2s;\n\n  &::after, &::before {\n    content: '';\n    display: inline-block;\n    background-color: var(--textCol);\n    position: absolute;\n  }\n\n  // horizontal\n  &::after {\n    top: 16px;\n    left: 3px;\n    width: 2rem;\n    height: 0.4rem;\n  }\n\n  // vertical\n  &::before {\n    top: 3px;\n    left: 16px;\n    width: 0.4rem;\n    height: 2rem;\n    visibility: ${props => props.isOpen ? 'hidden' : 'visible'};\n  }\n\n  &:focus {\n    outline: 2px solid var(--textCol);\n  }\n\n  &:hover {\n    cursor: pointer;\n    filter: brightness(2.25);\n    background: none;\n  }\n\n  &:active {\n    transform: scale(0.5);\n  }\n\n`;","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport sortMixedDateArray from \"../utils/sortMixedDateArray\";\nimport EditionCard from \"./EditionCard\";\nimport { FancyButton } from \"./FancyButton\";\n\nconst BookCardStyles = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 1rem;\n\n  background-color: var(--backgroundColBright);\n  color: var(--textCol);\n  box-shadow: var(--boxShadow);\n  padding: var(--pad);\n  border-radius: var(--borad);\n\n  min-height: fit-content;\n  margin: 1rem 0 0 0;\n  width: 100%;\n\n  img {\n    width: 180px;\n    max-height: 270px;\n    height: auto;\n    object-fit: cover;\n    box-shadow: var(--boxShadow);\n  }\n\n  .bookWrapper {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    height: fit-content;\n    max-width: 180px;\n    max-height: 270px;\n  }\n\n  .wrapperColumn {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    h3 {\n      margin-top: 0;\n    }\n  }\n\n  .rightColumn {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  p {\n    margin: 0.25rem 0;\n  }\n\n  .imagePlaceHolder {\n    width: 180px;\n    height: 270px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${props => props.color};\n    color: var(--backgroundCol);\n    font-weight: 700;\n    padding: 0.5rem;\n    font-size: 0.75rem;\n    box-shadow: var(--boxShadow);\n  }\n\n  .imSad {\n    background-color: black;\n    color: white;\n    border-radius: var(--borad);\n    padding: 1rem;\n    margin-top: 1rem;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst BookCard = ({ book, resultNumber }) => {\n  const [ isOpen, setIsOpen ] = useState(false);\n  const [ viewEditions, setViewEditions] = useState(false);\n\n  const toggleViewEditions = () => {\n    setViewEditions(!viewEditions);\n  }\n\n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  }\n\n  const { title, author_name: author, publish_year: publishYear, cover_edition_key: coverOLID, publish_date: publishDate, edition_key: editionKey } = book;\n\n  const coverURL = coverOLID ? `https://covers.openlibrary.org/b/olid/${coverOLID}-M.jpg` : null;\n\n  const color = 'rgb(30,40,50)';\n\n  const sortedDates = publishDate\n    ? sortMixedDateArray([...publishDate])\n    : null;\n\n  return (\n    <BookCardStyles color={color}>\n        <div className=\"bookWrapper\">\n          { coverURL &&\n            <img src={coverURL} alt={`Cover of the book ${title}`}></img>\n          }\n          { !coverURL &&\n            <div className=\"imagePlaceHolder\">\n              <p>\n              {title}\n              </p>\n            </div>\n          }\n        </div>\n      <ul className=\"wrapperColumn\">\n        <li><h3>{title}</h3></li>\n        <li><p>{Array.isArray(author) ? author.join(', ') : author}</p></li>\n        { publishDate && publishDate.length > 1\n          ?\n            <>\n              <li><p>First publication: {publishDate && sortedDates[0]}</p></li>\n              <li><p>Most Recent publication: {publishDate && sortedDates[sortedDates.length - 1]}</p></li>\n              { publishDate.length > 2 &&\n                <>\n                  <li><p>This record refers to {publishDate.length} publication dates. Click + to see them all.</p></li>\n                  { isOpen &&\n                    <ul>\n                    {sortedDates.map((year, i) => {\n                      return <li key={i}>{year}</li>\n                    })}\n                    </ul>\n                  }\n                </>\n              }\n            </>\n          : <li><p>{publishDate && sortedDates[0]}</p></li>\n        }\n        { editionKey &&\n          <>\n            <li>\n              <p>This record refers to {editionKey.length} edition{editionKey.length > 1 ? 's' : ''}.</p>\n            </li>\n            { isOpen &&\n              <ul>\n                { editionKey.map((OLID, i) => {\n                  return <li key={i + OLID} value=\"OLID\" onClick={() => console.log(OLID)}>{OLID}\n                      {/* <EditionCard OLID={OLID}/> */}\n                    </li>\n                  })\n                }\n                <li className=\"imSad\">\n                  <p>The API endpoint that serves data for specific edition IDs has not set the Access-Control-Allow-Origin CORS header.</p>\n                  <p>Without building some middleware I cannot access the data necessary to render cards for specific editions.</p>\n                  <p>Try this in the console:</p>\n                  <p><code>fetch(\"https://openlibrary.org/api/volumes/brief/olid/OL30597611M.json\").then(resp => resp.json()).then(console.log);</code></p>\n                </li>\n              </ul>\n            }\n          </>\n        }\n      </ul>\n      <div className=\"rightColumn\">\n        { publishDate && publishDate.length > 2 &&\n          <FancyButton onClick={toggleOpen} isOpen={isOpen}/>\n        }\n        <p></p>\n        <p>Result no. {resultNumber+1}</p>\n      </div>\n    </BookCardStyles>\n  )\n}\n\nexport default BookCard\n","export default function sortMixedDateArray (arr) {\n  // input array contains years like '1998', and dates like 'June 5, 2007'\n  // also you could see \"June 1940\" - which will return NaN if passed to Date.parse()\n  // convert them all to objects, attach a property to each that is a date object\n  // sort them by their date object properties\n  // only render the initial string\n  const mixedDatesSorted = arr.map(string => {\n    return {\n      dateString: string,\n      dateValue: Date.parse(string) || Date.parse(string.trim().slice(-4))\n    }\n  }).sort((a, b) => {\n    return a.dateValue - b.dateValue;\n  })\n  return mixedDatesSorted.map(elem => elem.dateString);\n}","import styled from \"styled-components\"\n\nconst CardWrapperStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 0;\n  padding: 1rem;\n  overflow-y: scroll;\n\n`;\n\nconst CardWrapper = ({ children }) => {\n  return (\n    <CardWrapperStyles>\n      {children}\n    </CardWrapperStyles>\n  )\n}\n\nexport default CardWrapper\n","import styled from \"styled-components\";\n\nexport const PageNavStyles = styled.nav`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  border-top: 2px solid var(--myGrey);\n\n\n  button {\n    transform: translateY(-62%);\n    border: 2px solid var(--textCol);\n    background-color: var(--backgroundColBright);\n    font-size: 1rem;\n    font-family: 'Raleway', sans-serif;\n    padding: 1rem;\n    margin: 0.5rem;\n    border-radius: var(--borad);\n    transition: all 0.25s;\n    width: 7rem;\n    box-shadow: var(--boxShadow);\n\n    &:disabled {\n      filter: contrast(0.15) brightness(1.2);\n    }\n\n    &:hover:not(:disabled) {\n      cursor: pointer;\n      background-color: var(--textCol);\n      color: var(--backgroundCol);\n    }\n\n    &:focus {\n      outline: 2px solid var(--textCol);\n      outline-offset: 2px;\n    }\n\n    &:active {\n      transform: translateY(-50%);\n    }\n  }\n\n  div {\n    width: 8rem;\n    display: flex;\n    justify-content: center;\n  }\n\n  span {\n    min-width: max-content;\n  }\n`;","import { PageNavStyles } from \"../styles/PageNavStyles\"\n\nconst PageNav = ({ pageJump, changePage, currentPage, pageCount}) => {\n  return (\n    <PageNavStyles>\n      <button value={'start'} onClick={pageJump} disabled={currentPage === 0 && true}>First</button>\n      <button value={-1} onClick={changePage} disabled={currentPage === 0 && true}>Previous</button>\n      <div>\n        <span>Page {currentPage + 1} of {pageCount}</span>\n      </div>\n      <button value={1} onClick={changePage } disabled={currentPage === pageCount - 1 && true}>Next</button>\n      <button value={'end'} onClick={pageJump} disabled={currentPage === pageCount - 1 && true}>Last</button>\n    </PageNavStyles>\n  )\n}\n\nexport default PageNav\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport BookCard from './components/BookCard';\nimport CardWrapper from './components/CardWrapper';\nimport PageNav from './components/PageNav';\nimport { separateBooks } from './utils/separateBooks';\nimport UseFetch from './utils/UseFetch';\n\n// the ISBN endpoint provided in the specs has CORS issues when a request is made from the browser\n// const url_ISBN = `http://openlibrary.org/api/volumes/brief/isbn/${isbn}.json`;\n// const proxy = \"https://cors-anywhere.herokuapp.com/\";\n\nfunction App({ AppStyles }) {\n\n  const searchURL = \"https://openlibrary.org/search.json?q=the+great+gatsby&limit=100&offset=0\";\n\n  const [ searchResults, loadingSearchResults ] = UseFetch(searchURL);\n  const [ books, setBooks ] = useState([]);\n  const [ currentPage, setCurrentPage ] = useState(0);\n  const [ resultsPerPage] = useState(10);\n  const [pageCount, setPageCount ] = useState(null);\n  const firstIndex = currentPage * resultsPerPage;\n  const lastIndex = firstIndex + resultsPerPage;\n  const [ sortDirection, setSortDirection ] = useState(-1);\n  const [ isByFirstEdition, setIsByFirstEdition ] = useState(true);\n\n  useEffect(() => {\n    if (!loadingSearchResults) {\n      setBooks(searchResults.docs);\n      setPageCount(Math.ceil(searchResults.docs.length / resultsPerPage));\n    }\n  },[loadingSearchResults, resultsPerPage, searchResults.docs]);\n\n  const changePage = (event) => {\n    const direction = Number(event.target.value);\n    if (currentPage < pageCount - 1 && direction === 1) {\n      setCurrentPage(currentPage + direction);\n    } else if ( currentPage > 0 && direction === -1 ) {\n      setCurrentPage(currentPage + direction);\n    }\n  }\n\n  const pageJump = (event) => {\n    const destination = event.target.value === 'start' ? 0 : pageCount - 1;\n    setCurrentPage(destination);\n  }\n\n  // Some books don't have a publish year property\n  // Pull those out before sorting\n  // And then include them at the end of the sorted array\n  const [ booksWithoutDates, booksWithDates ] = separateBooks(books);\n\n  const sortedBooks = [ ...booksWithDates].sort((a, b) => {\n    if (a.publish_year && b.publish_year) {\n      const aIndex = isByFirstEdition ? 0 : a.publish_year.length - 1;\n      const bIndex = isByFirstEdition ? 0 : b.publish_year.length - 1;\n      return (\n        (Number(a.publish_year.sort()[aIndex])\n        - Number(b.publish_year.sort()[bIndex]))\n        * sortDirection\n      );\n    } else {\n      // this shouldn't happen, we pulled out the ones without dates\n      return 0;\n    }\n  }).concat(booksWithoutDates);\n\n  fetch(\"https://openlibrary.org/api/volumes/brief/olid/OL30597611M.json\").then(resp => resp.json()).then(console.log);\n\n  return (\n    <AppStyles>\n      <CardWrapper>\n        {\n          sortedBooks.slice(firstIndex, lastIndex).map((book, i) => {\n            return <BookCard resultNumber={i + firstIndex} book={book} key={i} />\n          })\n        }\n      </CardWrapper>\n      <PageNav pageJump={pageJump} changePage={changePage} pageCount={pageCount} currentPage={currentPage}/>\n    </AppStyles>\n  );\n}\n\nexport default App;\n","export const separateBooks = (books) => {\n  const withoutDates = [];\n  const withDates = [];\n  books.forEach(book => {\n    book.hasOwnProperty('publish_year') ? withDates.push(book) : withoutDates.push(book)\n  })\n  return [withoutDates, withDates ];\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --backgroundCol: rgb(220,220,220);\n    --backgroundColBright: rgb(240,240,240);\n    --textCol: rgb(60,60,60);\n    --myGrey: rgb(190,190,190);\n    --boxShadow: 0 0 2px 2px rgba(0,0,0,0.1), 3px 3px 3px 3px rgba(0,0,0,0.2);\n    --pad: 2rem;\n    --borad: 2rem;\n    --maxWidth: 1200px;\n  }\n\n  html, body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background: var(--backgroundCol);\n    color: var(--textCol);\n    font-family: 'Raleway', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst AppStyles = styled.div`\n  width: 100vw;\n  height: 100vh;\n  max-width: var(--maxWidth);\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  grid-template-columns: 1fr;\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App AppStyles={AppStyles}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}