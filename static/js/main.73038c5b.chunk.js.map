{"version":3,"sources":["utils/sortMixedDateArray.js","components/FancyButton.js","components/BookCard.js","components/CardWrapper.js","styles/PageNavStyles.js","components/PageNav.js","components/FilterOptions.js","components/Search.js","utils/sortingFuncs.js","App.js","utils/UseFetch.js","reportWebVitals.js","index.js"],"names":["getJSdateFromBadDate","dateString","isNaN","Date","months","year","match","month","i","length","toLowerCase","includes","FancyButton","styled","button","props","isOpen","BookCardStyles","div","color","BookCard","book","resultNumber","useState","setIsOpen","title","author","author_name","coverOLID","cover_edition_key","publishDate","publish_date","editionKey","edition_key","coverURL","sortedDates","map","dirtyDate","pubDate","String","trim","dateValue","sort","a","b","elem","className","src","alt","Array","isArray","join","OLID","value","onClick","console","log","CardWrapperStyles","CardWrapper","children","PageNavStyles","nav","ButtonStyles","offset","PageNav","pageJump","changePage","currentPage","pageCount","disabled","FilterOptionsStyles","FilterOptions","setIsByFirstEdition","isByFirstEdition","sortMode","setSortMode","sortDirection","setSortDirection","setFilterIsOpen","optionsBtnRef","optionsRef","useRef","handleOutsideClick","event","current","contains","target","useEffect","window","addEventListener","removeEventListener","handleFirstEditionToggle","hanldeSortDirectionToggle","Number","ref","type","name","id","checked","onChange","htmlFor","SearchStyles","input","Search","onSearchChange","onSearchSubmit","searchString","setSearchString","filterIsOpen","defaultText","placeHolder","setPlaceHolder","onFocus","onBlur","placeholder","separateBooks","books","withoutDates","withDates","forEach","hasOwnProperty","push","App","AppStyles","setBooks","setCurrentPage","resultsPerPage","setPageCount","firstIndex","lastIndex","searchURL","setSearchURL","url","data","setData","loading","setLoading","fetch","then","resp","json","response","UseFetch","searchResults","loadingSearchResults","docs","Math","ceil","sortedBooks","booksWithoutDates","booksWithDates","publish_year","aIndex","bIndex","concat","sortBooksByDate","aTitle","toUpperCase","bTitle","sortBooksByTitle","q","split","slice","destination","direction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA0BMA,EAAuB,SAACC,GAC5B,IAAKC,MAAM,IAAIC,KAAKF,IAAc,OAAO,IAAIE,KAAKF,GAoBlD,IAlBA,IAAMG,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGIC,EAAOJ,EAAWK,MAAM,YAAY,GACtCC,EAAQ,KAEHC,EAAI,EAAGA,EAAIJ,EAAOK,OAAQD,IACjC,GAAIP,EAAWS,cAAcC,SAASP,EAAOI,GAAGE,eAAgB,CAC9DH,EAAQH,EAAOI,GACf,MAGJ,OAAO,IAAIL,KAAJ,UAAYI,EAAZ,YAVK,IAUL,YAA4BF,KCnDxBO,EAAcC,IAAOC,OAAV,+zBAiCN,SAAAC,GAAK,OAAIA,EAAMC,OAAS,SAAW,a,OC7B/CC,EAAiBJ,IAAOK,IAAV,kqDA+DI,SAACH,GAAD,OAAWA,EAAMI,SAkK1BC,EArIE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACxB,EAA4BC,oBAAS,GAArC,mBAAOP,EAAP,KAAeQ,EAAf,KAOEC,EAKEJ,EALFI,MACaC,EAIXL,EAJFM,YACmBC,EAGjBP,EAHFQ,kBACcC,EAEZT,EAFFU,aACaC,EACXX,EADFY,YAGIC,EAAWN,EAAS,gDACmBA,EADnB,UAEtB,KAIEO,EAAcL,EAAiC,YAAIA,GFlHtDM,KAAI,SAACC,GACJ,IAAMC,EAAUC,OAAOF,GAAWG,OAClC,MAAO,CACLvC,WAAYqC,EACZG,UAAWzC,EAAqBsC,OAGnCI,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAEF,UAAYG,EAAEH,aAEHL,KAAI,SAACS,GAAD,OAAUA,EAAK5C,cEwG8B,KAEzE,OACE,eAACgB,EAAD,CAAgBE,MALJ,gBAKZ,UACE,sBAAK2B,UAAU,cAAf,UACGZ,GACC,qBAAKa,IAAKb,EAAUc,IAAG,4BAAuBvB,MAE9CS,GACA,qBAAKY,UAAU,mBAAf,SACE,4BAAIrB,SAIV,qBAAIqB,UAAU,gBAAd,UACE,6BACE,6BAAKrB,MAEP,6BACE,4BAAIwB,MAAMC,QAAQxB,GAAUA,EAAOyB,KAAK,MAAQzB,MAEjDI,GAAeA,EAAYrB,OAAS,EACnC,qCACE,6BACE,oDAAuBqB,GAAeK,EAAY,QAEpD,6BACE,yDAC2B,IACxBL,GAAeK,EAAYA,EAAY1B,OAAS,QAGpDqB,EAAYrB,OAAS,GACpB,qCACE,6BACE,uDACyBqB,EAAYrB,OADrC,oDAKDO,GACC,6BACGmB,EAAYC,KAAI,SAAC/B,EAAMG,GACtB,OAAO,6BAAaH,GAAJG,cAQ5B,6BACE,4BAAIsB,GAAeK,EAAY,OAGlCH,GACC,qCACE,6BACE,uDACyBA,EAAWvB,OADpC,WAEGuB,EAAWvB,OAAS,EAAI,IAAM,GAFjC,SAKDO,GACC,+BACGgB,EAAWI,KAAI,SAACgB,EAAM5C,GACrB,OACE,oBAEE6C,MAAM,OACNC,QAAS,kBAAMC,QAAQC,IAAIJ,IAH7B,SAKGA,GAJI5C,EAAI4C,MASf,qBAAIN,UAAU,QAAd,UACE,oJAIA,2IAIA,yDACA,4BACE,uKAWd,sBAAKA,UAAU,cAAf,UACGhB,GAAeE,GACd,qBAAKc,UAAU,SAAf,SACE,cAAClC,EAAD,CAAa0C,QAxHJ,WACjB9B,GAAWR,IAuH+BA,OAAQA,MAG9C,sBACA,4CAAeM,EAAe,YC/NhCmC,EAAoB5C,IAAOK,IAAV,0KAmBRwC,EARK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,cAACF,EAAD,UACGE,KCdMC,EAAgB/C,IAAOgD,IAAV,weAwBbC,EAAejD,IAAOC,OAAV,+pBACrB,SAAAC,GAAK,OAAIA,EAAMgD,OAAS,+BAAiC,QA4BvD,SAAAhD,GAAK,OAAIA,EAAMgD,OAAS,+BAAiC,iCCVhDC,EA3CC,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACpD,OACE,eAACR,EAAD,WACE,cAACE,EAAD,CACEC,OAAQ,OACRV,MAAO,QACPC,QAASW,EACTI,SAA0B,IAAhBF,IAAqB,EAJjC,mBAQA,cAACL,EAAD,CACEC,OAAQ,OACRV,OAAQ,EACRC,QAASY,EACTG,SAA0B,IAAhBF,IAAqB,EAJjC,sBAQA,qBAAKrB,UAAU,gBAAf,SACE,yCACQqB,EAAc,EADtB,OAC6BC,OAG/B,cAACN,EAAD,CACEC,OAAQ,OACRV,MAAO,EACPC,QAASY,EACTG,SAAUF,IAAgBC,EAAY,IAAK,EAJ7C,kBAQA,cAACN,EAAD,CACEC,OAAQ,OACRV,MAAO,MACPC,QAASW,EACTI,SAAUF,IAAgBC,EAAY,IAAK,EAJ7C,sBC/BAE,EAAsBzD,IAAOK,IAAV,w2BA4JVqD,EA3GO,SAAC,GAAuI,IAArIC,EAAoI,EAApIA,oBAAqBC,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,SAAUC,EAAmF,EAAnFA,YAAaC,EAAsE,EAAtEA,cAAeC,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cAEjIC,EAAaC,iBAAO,MAEpBC,EAAqB,SAACC,GAEtBH,EAAWI,SAAWJ,EAAWI,QAAQC,SAASF,EAAMG,SACxDP,EAAcK,SAAWL,EAAcK,UAAYD,EAAMG,QAC7DR,GAAgB,IAGlBS,qBAAU,WAER,OADAC,OAAOC,iBAAiB,YAAaP,GAC9B,WACLM,OAAOE,oBAAoB,YAAaR,OAI5C,IAAMS,EAA2B,WAC/BnB,GAAqBC,IAGjBmB,EAA4B,SAACT,GACjCN,EAAiBgB,OAAOV,EAAMG,OAAOjC,QACrCsB,EAAY,SAOd,OACE,eAACL,EAAD,CAAqBwB,IAAKd,EAA1B,UACE,iCACE,gDACA,gCACE,uBACEe,KAAK,QACLC,KAAK,aACL3C,MAAM,QACN4C,GAAG,UACHC,QAAsB,UAAbxB,EACTyB,SAfmB,WAC3BxB,EAAyB,SAAbD,EAAsB,QAAU,WAgBtC,uBAAO0B,QAAQ,UAAf,yBAEF,gCACE,uBACEL,KAAK,QACLC,KAAK,aACL3C,OAAQ,EACR4C,GAAG,cACHC,QAAsB,SAAbxB,IAA0C,IAAnBE,EAChCuB,SAAUP,IAEZ,uBAAOQ,QAAQ,cAAf,0CAEF,gCACE,uBACEL,KAAK,QACLC,KAAK,aACL3C,MAAO,EACP4C,GAAG,cACHC,QAAsB,SAAbxB,GAAyC,IAAlBE,EAChCuB,SAAUP,IAEZ,uBAAOQ,QAAQ,aAAf,6CAGa,SAAb1B,GACA,+BACE,sBAAK5B,UAAU,cAAf,UACE,2EACA,uIAIA,0FACA,gCACE,uBACEqD,SAAUR,EACVI,KAAK,QACLC,KAAK,aACL3C,OAAO,EACP4C,GAAG,oBACHC,SAAUzB,IAEZ,uBAAO2B,QAAQ,aAAf,sCAEF,gCACE,uBACED,SAAUR,EACVI,KAAK,QACLC,KAAK,aACL3C,OAAO,EACP4C,GAAG,mBACHC,QAASzB,IAEX,uBAAO2B,QAAQ,aAAf,2CC9IVC,EAAexF,IAAOyF,MAAV,oXA6EHC,EA3DA,SAAC,GAWT,IAVLC,EAUI,EAVJA,eACAC,EASI,EATJA,eACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,gBACAnC,EAMI,EANJA,oBACAC,EAKI,EALJA,iBACAG,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAH,EAEI,EAFJA,SACAC,EACI,EADJA,YAEA,EAAyCpD,oBAAS,GAAlD,mBAAQqF,EAAR,KAAsB9B,EAAtB,KACM+B,EAAc,oBACpB,EAAwCtF,mBAASsF,GAAjD,mBAAQC,EAAR,KAAqBC,EAArB,KAEMhC,EAAgBE,iBAAO,MAe7B,OACE,eAAC,EAAD,WACE,cAACoB,EAAD,CACEhD,MAAOqD,EACPX,KAAK,SACLI,SAAUK,EACVQ,QAnBc,WAClBL,EAAgB,IAChBI,EAAe,KAkBXE,OAXc,WAClBF,EAAeF,IAWXK,YAAaJ,IAEf,cAAChD,EAAD,CAAcR,QAASmD,EAAvB,oBACA,cAAC3C,EAAD,CAAcR,QAnBO,WACvBwB,GAAiB8B,IAkB0Bd,IAAKf,EAA9C,qBACC6B,GACC,cAAC,EAAD,CACEpC,oBAAqBA,EACrBC,iBAAkBA,EAClBG,cAAeA,EACfC,iBAAkBA,EAClBH,SAAUA,EACVC,YAAaA,EACbG,gBAAiBA,EACjBC,cAAeA,QCzDZoC,EAAgB,SAACC,GAC5B,IAAMC,EAAe,GACfC,EAAY,GAIlB,OAHAF,EAAMG,SAAQ,SAAAlG,GACZA,EAAKmG,eAAe,gBAAkBF,EAAUG,KAAKpG,GAAQgG,EAAaI,KAAKpG,MAE1E,CAACgG,EAAcC,I,yBC0DTI,I,IAAAA,EA7Ef,YAA6B,IAAdC,EAAa,EAAbA,UAIb,EAA4BpG,mBAAS,IAArC,mBAAQ6F,EAAR,KAAeQ,EAAf,KACA,EAAwCrG,mBAAS,GAAjD,mBAAQ4C,EAAR,KAAqB0D,EAArB,KACA,EAA0BtG,mBAAS,IAA3BuG,EAAR,oBACA,EAAoCvG,mBAAS,MAA7C,mBAAQ6C,EAAR,KAAmB2D,EAAnB,KACMC,EAAa7D,EAAc2D,EAC3BG,EAAYD,EAAaF,EAC/B,EAAkCvG,mBAAS,QAA3C,mBAAQmD,EAAR,KAAkBC,EAAlB,KACA,EAA4CpD,oBAAU,GAAtD,mBAAQqD,EAAR,KAAuBC,EAAvB,KACA,EAAkDtD,oBAAS,GAA3D,mBAAQkD,EAAR,KAA0BD,EAA1B,KACA,EAA0CjD,mBAAS,oBAAnD,mBAAQmF,EAAR,KAAsBC,EAAtB,KACA,EAAoCpF,mBAZjB,6EAYnB,mBAAQ2G,EAAR,KAAmBC,EAAnB,KACA,ECrBa,SAAkBC,GAE/B,MAA0B7G,mBAAS,IAAnC,mBAAQ8G,EAAR,KAAcC,EAAd,KACA,EAA+B/G,oBAAS,GAAxC,mBAAQgH,EAAR,KAAiBC,EAAjB,KAWA,OATAjD,qBAAU,WACR,sBAAC,4BAAA5C,EAAA,6DACC6F,GAAW,GADZ,SAEwBC,MAAML,GAAKM,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAFrD,OAEOC,EAFP,OAGCP,EAAQO,GACRL,GAAW,GAJZ,0CAAD,KAMA,CAACJ,IAEI,CAAEC,EAAME,GDOiCO,CAASZ,GAAzD,mBAAQa,EAAR,KAAuBC,EAAvB,KAWAzD,qBAAU,WACHyD,IACHpB,EAASmB,EAAcE,MACvBlB,EAAamB,KAAKC,KAAKJ,EAAcE,KAAKxI,OAASqH,OAErD,CAACkB,EAAsBlB,EAAgBiB,EAAcE,OAEvD,IAcMG,EAA4B,SAAb1E,EDvDQ,SAAC0C,EAAOxC,EAAeH,GAIpD,MAA8C0C,EAAcC,GAA5D,mBAAQiC,EAAR,KAA2BC,EAA3B,KACA,OAAO,YAAKA,GAAgB5G,MAAK,SAACC,EAAGC,GACnC,GAAID,EAAE4G,cAAgB3G,EAAE2G,aAAc,CACpC,IAAMC,EAAS/E,EAAmB,EAAI9B,EAAE4G,aAAa9I,OAAS,EACxDgJ,EAAShF,EAAmB,EAAI7B,EAAE2G,aAAa9I,OAAS,EAC9D,OACGoF,OAAOlD,EAAE4G,aAAa7G,OAAO8G,IAC5B3D,OAAOjD,EAAE2G,aAAa7G,OAAO+G,KAC7B7E,EAIJ,OAAO,KAER8E,OAAOL,GCsCNM,CAAgBvC,EAAOxC,EAAeH,GD1BZ,SAAC2C,GAC/B,OAAO,YAAIA,GAAO1E,MAAK,SAACC,EAAGC,GACzB,IAAMgH,EAASjH,EAAElB,MAAMoI,cACjBC,EAASlH,EAAEnB,MAAMoI,cACvB,OAAOD,EAASE,GAAU,EAAIF,EAASE,EAAS,EAAI,KCuBlDC,CAAiB3C,GAErB,OACE,eAACO,EAAD,WACE,cAAC,EAAD,CACEnB,eArCiB,SAACrB,GACtBwB,EAAgBxB,EAAMG,OAAOjC,QAqCzBoD,eAlCiB,WACrB,IAAMuD,EAAItD,EAAalE,OAAOyH,MAAM,KAAK9G,KAAK,KAC9CgF,EAAa,yCAAD,OAA0C6B,EAA1C,yBAiCRtD,aAAcA,EACdC,gBAAkBA,EAClBnC,oBAAqBA,EACrBC,iBAAkBA,EAClBG,cAAeA,EACfC,iBAAkBA,EAClBH,SAAUA,EACVC,YAAaA,IAEf,cAAC,EAAD,UAEIyE,EAAYc,MAAMlC,EAAYC,GAAW7F,KAAI,SAACf,EAAMb,GAClD,OAAO,cAAC,EAAD,CAAUc,aAAcd,EAAIwH,EAAY3G,KAAMA,GAAWb,QAItE,cAAC,EAAD,CAASyD,SA9BI,SAACkB,GAChB,IAAMgF,EAAqC,UAAvBhF,EAAMG,OAAOjC,MAAoB,EAAIe,EAAY,EACrEyD,EAAesC,IA4BgBjG,WAvCd,SAACiB,GAClB,IAAMiF,EAAYvE,OAAOV,EAAMG,OAAOjC,QAClCc,EAAcC,EAAY,GAAmB,IAAdgG,GAEvBjG,EAAc,IAAoB,IAAfiG,IAD7BvC,EAAe1D,EAAciG,IAoCwBhG,UAAWA,EAAWD,YAAaA,QEpE/EkG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCARO,EAAeC,YAAH,u6CAmEZnD,EAAY9G,IAAOK,IAAV,kNAWf6J,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,CAAKlD,UAAWA,OAElBuD,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.73038c5b.chunk.js","sourcesContent":["export const sortMixedDateArray = (arr) => {\n  // convert them all to objects, attach a property to each that is a date object\n  // sort them by their date object properties\n  // only render the initial string\n  const mixedDatesSorted = arr\n    .map((dirtyDate) => {\n      const pubDate = String(dirtyDate).trim();\n      return {\n        dateString: pubDate,\n        dateValue: getJSdateFromBadDate(pubDate),\n      };\n    })\n    .sort((a, b) => {\n      return a.dateValue - b.dateValue;\n    });\n  return mixedDatesSorted.map((elem) => elem.dateString);\n};\n// input array contains years like '1998', and dates like 'June 5, 2007'\n// also you could see \"June 1940\" - which will return NaN if passed to Date.parse()\n// or 1940 June - which makes this whole thing a little challenging.\n// In order to do this properly we'll need some more intensive string manipulation\n// Use a regex to look for /d/d/d/d\n// Check the string against an array of months\n// reconstitute a new string with the month that was found, the date matched with the regex, and a dummy date\n// create a proper javascript date from this new string and use it in our compare function\n\nconst getJSdateFromBadDate = (dateString) => {\n  if (!isNaN(new Date(dateString))) return new Date(dateString);\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const day = \"1\"; // dummy day - the input date string had no day\n  const year = dateString.match(/\\d\\d\\d\\d/)[0];\n  let month = null;\n\n  for (let i = 0; i < months.length; i ++) {\n    if (dateString.toLowerCase().includes(months[i].toLowerCase())) {\n      month = months[i];\n      break;\n    }\n  }\n  return new Date(`${month} ${day} ${year}`);\n};\n\n/*\n\nHere's a very naughty array of dates that obey no particular format.\n\n[\"1997 April 24\",\"2006 January 26\",\"1999\",\"1998\",\"1991 May 14\",\"2013 May\",\"1949\",\"1996\",\"2001 November\",\"2015 February\",\"1995 July 21\",\"1987 August 14\",\"May 16, 2019\",\"1976 April\",\"1991\",\"2007 January 25\",\"1958\",\"1934\",\"1998 January 01\",\"1985 August\",\"1975\",\"2001 October\",\"1997\",\"2012\",\"1961\",\"1994 June\",\"2001\",\"2012 May\",\"1979 October 01\",\"2005 October 17\",\"2016 January\",\"1999 May\",\"2005 August 2\",\"2013 April\",\"1980\",\"2008 January 22\",\"2015\",\"1967\",\"2020\",\"1974-03\",\"2013\",\"1994 August\",\"2012-04\",\"2003 July\",\"1975 January 1\",\"2004 August\",\"2009\",\"2016 March 27\",\"2002 October 01\",\"1991 February 18\",\"2018\",\"2007 October 31\",\"2017\",\"1988 May 31\",\"2006\",\"2018 July\",\"1973\",\"1946\",\"2013 04 25\",\"2012 June\",\"2003\",\"1948\",\"2002 April\",\"1984\",\"1962\",\"1990-03-01\",\"1996 January 01\",\"1979\",\"2008\",\"1999 December 05\",\"1950\",\"2012 March 13\",\"1995 October 01\",\"1986\",\"1995\",\"Sep 16, 2015\",\"Sep 01, 2018\",\"2004 October\",\"2002 August\",\"2000\",\"1978-03\",\"2010\",\"1991 September 26\",\"Mar 15, 2012\",\"1953\",\"1988 December\",\"2011\",\"1998 September 03\",\"2008 March 1\",\"2000 February 24\",\"1993\",\"December 1991\",\"1997 April 10\",\"2016 June\",\"1974\",\"1993 June 01\",\"1995 September 01\",\"1968\",\"2004\",\"1925 January 01\",\"1992 August\",\"2015 May\",\"2005 September 30\",\"1990\",\"1925\",\"2003 September 30\",\"1975 January 01\",\"2007\",\"1981\",\"1994\",\"2016 April\",\"2018 April\",\"2007 October 1\",\"1992\",\"1988\",\"2014 December 17\",\"2002 January\",\"2014\",\"1994 January 01\",\"2016\",\"1970\",\"2012 September\",\"1996 June 28\",\"1945 November\",\"1977\",\"1996 March 01\",\"2011 January\"]\n\n*/","import styled from \"styled-components\";\n\nexport const FancyButton = styled.button`\n  position: relative;\n  width: 2.5rem;\n  height: 2.5rem;\n  margin: 0.75rem;\n  align-self: start;\n  border: none;\n  font-size: 2.5rem;\n  padding: 0;\n  background-color: transparent;\n  transition: all 0.2s;\n\n  &::after, &::before {\n    content: '';\n    display: inline-block;\n    background-color: var(--textCol);\n    position: absolute;\n  }\n\n  // horizontal\n  &::after {\n    top: 16px;\n    left: 3px;\n    width: 2rem;\n    height: 0.4rem;\n  }\n\n  // vertical\n  &::before {\n    top: 3px;\n    left: 16px;\n    width: 0.4rem;\n    height: 2rem;\n    visibility: ${props => props.isOpen ? 'hidden' : 'visible'};\n  }\n\n  &:focus {\n    outline: 2px solid var(--textCol);\n  }\n\n  &:hover {\n    cursor: pointer;\n    filter: brightness(2.25);\n    background: none;\n  }\n\n  &:active {\n    transform: scale(0.5);\n  }\n\n`;","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { sortMixedDateArray } from \"../utils/sortMixedDateArray\";\nimport { FancyButton } from \"./FancyButton\";\n// import EditionCard from \"./EditionCard\";\n\nconst BookCardStyles = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: var(--fz);\n  position: relative;\n\n  background-color: var(--backgroundColBright);\n  color: var(--textCol);\n  box-shadow: var(--boxShadow);\n  padding: var(--pad);\n  border-radius: var(--borad);\n\n  min-height: fit-content;\n  margin: 0 0 1rem 0;\n  width: 100%;\n\n  img {\n    width: 150px;\n    max-height: 270px;\n    height: auto;\n    object-fit: cover;\n    box-shadow: var(--boxShadow);\n  }\n\n  .bookWrapper {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    height: fit-content;\n    max-width: 180px;\n    max-height: 270px;\n  }\n\n  .wrapperColumn {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    h3 {\n      margin-top: 0;\n    }\n  }\n\n  .rightColumn {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  h3 {\n    margin-bottom: 0.25rem;\n  }\n\n  .imagePlaceHolder {\n    width: 150px;\n    height: 225px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${(props) => props.color};\n    color: var(--backgroundCol);\n    font-weight: 700;\n    padding: 0.5rem;\n    font-size: 0.75rem;\n    box-shadow: var(--boxShadow);\n  }\n\n  .expand {\n    position: absolute;\n    padding: 0;\n    margin: 0.375rem 0.375rem 0 0;\n    top: 0;\n    right: 0;\n  }\n\n  .imSad {\n    background-color: black;\n    color: white;\n    border-radius: var(--borad);\n    padding: 1rem;\n    margin-top: 1rem;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst BookCard = ({ book, resultNumber }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const {\n    title,\n    author_name: author,\n    cover_edition_key: coverOLID,\n    publish_date: publishDate,\n    edition_key: editionKey,\n  } = book;\n\n  const coverURL = coverOLID\n    ? `https://covers.openlibrary.org/b/olid/${coverOLID}-M.jpg`\n    : null;\n\n  const color = \"rgb(30,40,50)\";\n\n  const sortedDates = publishDate ? sortMixedDateArray([...publishDate]) : null;\n\n  return (\n    <BookCardStyles color={color}>\n      <div className=\"bookWrapper\">\n        {coverURL && (\n          <img src={coverURL} alt={`Cover of the book ${title}`}></img>\n        )}\n        {!coverURL && (\n          <div className=\"imagePlaceHolder\">\n            <p>{title}</p>\n          </div>\n        )}\n      </div>\n      <ul className=\"wrapperColumn\">\n        <li>\n          <h3>{title}</h3>\n        </li>\n        <li>\n          <p>{Array.isArray(author) ? author.join(\", \") : author}</p>\n        </li>\n        {publishDate && publishDate.length > 1 ? (\n          <>\n            <li>\n              <p>First publication: {publishDate && sortedDates[0]}</p>\n            </li>\n            <li>\n              <p>\n                Most Recent publication:{\" \"}\n                {publishDate && sortedDates[sortedDates.length - 1]}\n              </p>\n            </li>\n            {publishDate.length > 2 && (\n              <>\n                <li>\n                  <p>\n                    This record refers to {publishDate.length} publication\n                    dates. Click + to see them all.\n                  </p>\n                </li>\n                {isOpen && (\n                  <ul>\n                    {sortedDates.map((year, i) => {\n                      return <li key={i}>{year}</li>;\n                    })}\n                  </ul>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <li>\n            <p>{publishDate && sortedDates[0]}</p>\n          </li>\n        )}\n        {editionKey && (\n          <>\n            <li>\n              <p>\n                This record refers to {editionKey.length} edition\n                {editionKey.length > 1 ? \"s\" : \"\"}.\n              </p>\n            </li>\n            {isOpen && (\n              <ul>\n                {editionKey.map((OLID, i) => {\n                  return (\n                    <li\n                      key={i + OLID}\n                      value=\"OLID\"\n                      onClick={() => console.log(OLID)}\n                    >\n                      {OLID}\n                      {/* <EditionCard OLID={OLID}/> */}\n                    </li>\n                  );\n                })}\n                <li className=\"imSad\">\n                  <p>\n                    The API endpoint that serves data for specific edition IDs\n                    has not set the Access-Control-Allow-Origin CORS header.\n                  </p>\n                  <p>\n                    Without building some middleware I cannot access the data\n                    necessary to render cards for specific editions.\n                  </p>\n                  <p>Try this in the console:</p>\n                  <p>\n                    <code>\n                      fetch(\"https://openlibrary.org/api/volumes/brief/olid/OL30597611M.json\").then(resp\n                      => resp.json()).then(console.log);\n                    </code>\n                  </p>\n                </li>\n              </ul>\n            )}\n          </>\n        )}\n      </ul>\n      <div className=\"rightColumn\">\n        {publishDate && editionKey && (\n          <div className=\"expand\">\n            <FancyButton onClick={toggleOpen} isOpen={isOpen} />\n          </div>\n        )}\n        <p></p>\n        <p>Result no. {resultNumber + 1}</p>\n      </div>\n    </BookCardStyles>\n  );\n};\n\nexport default BookCard;\n","import styled from \"styled-components\"\n\nconst CardWrapperStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin: 0;\n  padding: 1rem;\n  overflow-y: scroll;\n\n`;\n\nconst CardWrapper = ({ children }) => {\n  return (\n    <CardWrapperStyles>\n      {children}\n    </CardWrapperStyles>\n  )\n}\n\nexport default CardWrapper\n","import styled from \"styled-components\";\n\nexport const PageNavStyles = styled.nav`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  border-top: 2px solid var(--myGrey);\n  font-size: var(--fz);\n\n  div.pageReference {\n    width: var(--buttonWidth);\n    display: flex;\n    justify-content: center;\n    transform: translateY(-70%);\n    order: var(--orderAssignEnd);\n    width: var(--assignWidth100);\n  }\n\n  span {\n    min-width: max-content;\n  }\n`;\n\nexport const ButtonStyles = styled.button`\n  ${props => props.offset ? 'transform: translateY(-62%);' : null};\n  border: 2px solid var(--textCol);\n  background-color: var(--backgroundColBright);\n  font-size: var(--fz);\n  font-family: 'Raleway', sans-serif;\n  height: 44px;\n  width: var(--buttonWidth);\n  margin: var(--buttonMargin);\n  border-radius: var(--borad);\n  transition: all 0.25s;\n  box-shadow: var(--boxShadow);\n\n  &:disabled {\n    filter: contrast(0.15) brightness(1.2);\n  }\n\n  &:hover:not(:disabled) {\n    cursor: pointer;\n    background-color: var(--textCol);\n    color: var(--backgroundCol);\n  }\n\n  &:focus {\n    outline: 2px solid var(--textCol);\n    outline-offset: 2px;\n  }\n\n  &:active {\n    ${props => props.offset ? 'transform: translateY(-50%);' : 'transform: translateY(10%);'};\n  }\n`;\n\n","import { ButtonStyles, PageNavStyles } from \"../styles/PageNavStyles\";\n\nconst PageNav = ({ pageJump, changePage, currentPage, pageCount }) => {\n  return (\n    <PageNavStyles>\n      <ButtonStyles\n        offset={\"true\"}\n        value={\"start\"}\n        onClick={pageJump}\n        disabled={currentPage === 0 && true}\n      >\n        First\n      </ButtonStyles>\n      <ButtonStyles\n        offset={\"true\"}\n        value={-1}\n        onClick={changePage}\n        disabled={currentPage === 0 && true}\n      >\n        Previous\n      </ButtonStyles>\n      <div className=\"pageReference\">\n        <span>\n          Page {currentPage + 1} of {pageCount}\n        </span>\n      </div>\n      <ButtonStyles\n        offset={\"true\"}\n        value={1}\n        onClick={changePage}\n        disabled={currentPage === pageCount - 1 && true}\n      >\n        Next\n      </ButtonStyles>\n      <ButtonStyles\n        offset={\"true\"}\n        value={\"end\"}\n        onClick={pageJump}\n        disabled={currentPage === pageCount - 1 && true}\n      >\n        Last\n      </ButtonStyles>\n    </PageNavStyles>\n  );\n};\nexport default PageNav;\n","import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst FilterOptionsStyles = styled.div`\n  background-color: var(--backgroundCol);\n  top: 100%;\n  position: absolute;\n  min-width: 90%;\n  margin: 0 0.5rem;\n  border: 2px solid var(--textCol);\n  box-shadow: var(--boxShadow);\n  padding: var(--pad);\n  border-radius: var(--borad);\n  display: flex;\n  flex-flow: row wrap;\n  z-index: 2;\n\n  form {\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n  }\n\n  label {\n    min-width: max-content;\n  }\n\n  div {\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  div.dateOptions {\n    border-top: 2px solid var(--textCol);\n    margin: var(--pad) 0;\n    padding: var(--pad) 0;\n\n    p {\n      margin: 0.25rem 0;\n    }\n  }\n\n  input[type=\"radio\"] {\n    width: 2rem;\n    height: 2rem;\n  }\n`;\n\nconst FilterOptions = ({ setIsByFirstEdition, isByFirstEdition, sortMode, setSortMode, sortDirection, setSortDirection, setFilterIsOpen, optionsBtnRef }) => {\n\n  const optionsRef = useRef(null);\n\n  const handleOutsideClick = (event) => {\n    // close list on click outside of component\n    if (optionsRef.current && optionsRef.current.contains(event.target)) return;\n    if (optionsBtnRef.current && optionsBtnRef.current === event.target) return;\n    setFilterIsOpen(false);\n  }\n\n  useEffect(()=> {\n    window.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleOutsideClick);\n    }\n  });\n\n  const handleFirstEditionToggle = () => {\n    setIsByFirstEdition(!isByFirstEdition);\n  };\n\n  const hanldeSortDirectionToggle = (event) => {\n    setSortDirection(Number(event.target.value));\n    setSortMode('date');\n  }\n\n  const handleSortModeToggle = () => {\n    setSortMode(sortMode === 'date' ? 'title' : 'date');\n  }\n\n  return (\n    <FilterOptionsStyles ref={optionsRef}>\n      <form>\n        <h3>Filter Options</h3>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"filterType\"\n            value=\"title\"\n            id=\"byTitle\"\n            checked={sortMode === 'title'}\n            onChange={handleSortModeToggle}\n          ></input>\n          <label htmlFor=\"byTitle\">By title</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"filterType\"\n            value={-1}\n            id=\"newestFirst\"\n            checked={sortMode === 'date' && sortDirection === -1}\n            onChange={hanldeSortDirectionToggle}\n          ></input>\n          <label htmlFor=\"newestFirst\">Newest publications first</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"filterType\"\n            value={1}\n            id=\"oldestFirst\"\n            checked={sortMode === 'date' && sortDirection === 1}\n            onChange={hanldeSortDirectionToggle}\n          ></input>\n          <label htmlFor=\"filterType\">Oldest publications first</label>\n        </div>\n      </form>\n        { sortMode === 'date' &&\n          <form>\n            <div className=\"dateOptions\">\n              <p>Some books have been published many times.</p>\n              <p>\n                Woud you like to use their oldest publication date or their most\n                recent publication date when sorting?\n              </p>\n              <p>This can be useful for finding new releases of old books.</p>\n              <div>\n                <input\n                  onChange={handleFirstEditionToggle}\n                  type=\"radio\"\n                  name=\"filterType\"\n                  value={false}\n                  id=\"!isByFirstEdition\"\n                  checked={!isByFirstEdition}\n                ></input>\n                <label htmlFor=\"filterType\">Use their most recent</label>\n              </div>\n              <div>\n                <input\n                  onChange={handleFirstEditionToggle}\n                  type=\"radio\"\n                  name=\"filterType\"\n                  value={true}\n                  id=\"isByFirstEdition\"\n                  checked={isByFirstEdition}\n                ></input>\n                <label htmlFor=\"filterType\">User their oldest</label>\n              </div>\n            </div>\n          </form>\n        }\n    </FilterOptionsStyles>\n  );\n};\n\nexport default FilterOptions;\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  ButtonStyles,\n  PageNavStyles as SearchOuterStyles,\n} from \"../styles/PageNavStyles\";\nimport FilterOptions from \"./FilterOptions\";\n\nconst SearchStyles = styled.input`\n  border: 2px solid var(--textCol);\n  margin: var(--buttonMargin);\n  font-size: 1rem;\n  padding: 0.25rem 0.5rem 0.25rem 0.5rem;\n  border-radius: var(--borad);\n  width: var(--textInputWidth);\n\n  &:focus {\n    outline-offset: 2px;\n    outline: 2px solid var(--textCol);\n  }\n\n  @media (max-width: 500px) {\n    min-height: 44px;\n  }\n`;\n\nconst Search = ({\n  onSearchChange,\n  onSearchSubmit,\n  searchString,\n  setSearchString,\n  setIsByFirstEdition,\n  isByFirstEdition,\n  sortDirection,\n  setSortDirection,\n  sortMode,\n  setSortMode\n}) => {\n  const [ filterIsOpen, setFilterIsOpen] = useState(false);\n  const defaultText = 'Search for a book'\n  const [ placeHolder, setPlaceHolder ] = useState(defaultText);\n\n  const optionsBtnRef = useRef(null);\n\n  const handleFocus = () => {\n    setSearchString(\"\");\n    setPlaceHolder(\"\");\n  };\n\n  const toggleFilterOpen = () => {\n    setFilterIsOpen(!filterIsOpen);\n  };\n\n  const onInputBlur = () => {\n    setPlaceHolder(defaultText)\n  }\n\n  return (\n    <SearchOuterStyles>\n      <SearchStyles\n        value={searchString}\n        type=\"search\"\n        onChange={onSearchChange}\n        onFocus={handleFocus}\n        onBlur={onInputBlur}\n        placeholder={placeHolder}\n      ></SearchStyles>\n      <ButtonStyles onClick={onSearchSubmit}>Search</ButtonStyles>\n      <ButtonStyles onClick={toggleFilterOpen} ref={optionsBtnRef}>Options</ButtonStyles>\n      {filterIsOpen && (\n        <FilterOptions\n          setIsByFirstEdition={setIsByFirstEdition}\n          isByFirstEdition={isByFirstEdition}\n          sortDirection={sortDirection}\n          setSortDirection={setSortDirection}\n          sortMode={sortMode}\n          setSortMode={setSortMode}\n          setFilterIsOpen={setFilterIsOpen}\n          optionsBtnRef={optionsBtnRef}\n        />\n      )}\n    </SearchOuterStyles>\n  );\n};\n\nexport default Search;\n","export const sortBooksByDate = (books, sortDirection, isByFirstEdition) => {\n  // Some books don't have a publish year property\n  // Pull those out before sorting\n  // And then include them at the end of the sorted array\n  const [ booksWithoutDates, booksWithDates ] = separateBooks(books);\n  return [ ...booksWithDates].sort((a, b) => {\n    if (a.publish_year && b.publish_year) {\n      const aIndex = isByFirstEdition ? 0 : a.publish_year.length - 1;\n      const bIndex = isByFirstEdition ? 0 : b.publish_year.length - 1;\n      return (\n        (Number(a.publish_year.sort()[aIndex])\n        - Number(b.publish_year.sort()[bIndex]))\n        * sortDirection\n      );\n    } else {\n      // this shouldn't happen, we pulled out the ones without dates\n      return 0;\n    }\n  }).concat(booksWithoutDates)\n}\n\nexport const separateBooks = (books) => {\n  const withoutDates = [];\n  const withDates = [];\n  books.forEach(book => {\n    book.hasOwnProperty('publish_year') ? withDates.push(book) : withoutDates.push(book)\n  })\n  return [withoutDates, withDates ];\n}\n\nexport const sortBooksByTitle = (books) => {\n  return [...books].sort((a, b) => {\n    const aTitle = a.title.toUpperCase();\n    const bTitle = b.title.toUpperCase();\n    return aTitle < bTitle ? -1 : aTitle > bTitle ? 1 : 0;\n  });\n}\n\n\n\n","import { useEffect, useState } from 'react';\nimport BookCard from './components/BookCard';\nimport CardWrapper from './components/CardWrapper';\nimport PageNav from './components/PageNav';\nimport Search from './components/Search';\nimport { sortBooksByDate, sortBooksByTitle } from './utils/sortingFuncs';\nimport UseFetch from './utils/UseFetch';\n\nfunction App({ AppStyles }) {\n\n  const defaultURL = \"https://openlibrary.org/search.json?q=the+great+gatsby&limit=100&offset=0\";\n\n  const [ books, setBooks ] = useState([]);\n  const [ currentPage, setCurrentPage ] = useState(0);\n  const [ resultsPerPage] = useState(10);\n  const [ pageCount, setPageCount ] = useState(null);\n  const firstIndex = currentPage * resultsPerPage;\n  const lastIndex = firstIndex + resultsPerPage;\n  const [ sortMode, setSortMode ] = useState('date')\n  const [ sortDirection, setSortDirection ] = useState(-1);\n  const [ isByFirstEdition, setIsByFirstEdition ] = useState(true);\n  const [ searchString, setSearchString ] = useState('the great gatsby');\n  const [ searchURL, setSearchURL ] = useState(defaultURL);\n  const [ searchResults, loadingSearchResults ] = UseFetch(searchURL);\n\n  const onSearchChange = (event) => {\n    setSearchString(event.target.value);\n  }\n\n  const onSearchSubmit = () => {\n    const q = searchString.trim().split(' ').join('+');\n    setSearchURL(`https://openlibrary.org/search.json?q=${q}&limit=100&offset=0`);\n  }\n\n  useEffect(() => {\n    if (!loadingSearchResults) {\n      setBooks(searchResults.docs);\n      setPageCount(Math.ceil(searchResults.docs.length / resultsPerPage));\n    }\n  },[loadingSearchResults, resultsPerPage, searchResults.docs]);\n\n  const changePage = (event) => {\n    const direction = Number(event.target.value);\n    if (currentPage < pageCount - 1 && direction === 1) {\n      setCurrentPage(currentPage + direction);\n    } else if ( currentPage > 0 && direction === -1 ) {\n      setCurrentPage(currentPage + direction);\n    }\n  }\n\n  const pageJump = (event) => {\n    const destination = event.target.value === 'start' ? 0 : pageCount - 1;\n    setCurrentPage(destination);\n  }\n\n  const sortedBooks = (sortMode === 'date')\n    ? sortBooksByDate(books, sortDirection, isByFirstEdition)\n    : sortBooksByTitle(books);\n\n  return (\n    <AppStyles>\n      <Search\n        onSearchChange={onSearchChange}\n        onSearchSubmit={onSearchSubmit}\n        searchString={searchString}\n        setSearchString ={setSearchString}\n        setIsByFirstEdition={setIsByFirstEdition}\n        isByFirstEdition={isByFirstEdition}\n        sortDirection={sortDirection}\n        setSortDirection={setSortDirection}\n        sortMode={sortMode}\n        setSortMode={setSortMode}\n      />\n      <CardWrapper>\n        {\n          sortedBooks.slice(firstIndex, lastIndex).map((book, i) => {\n            return <BookCard resultNumber={i + firstIndex} book={book} key={i} />\n          })\n        }\n      </CardWrapper>\n      <PageNav pageJump={pageJump} changePage={changePage} pageCount={pageCount} currentPage={currentPage}/>\n    </AppStyles>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default function UseFetch(url) {\n\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const response = await fetch(url).then(resp => resp.json());\n      setData(response);\n      setLoading(false);\n    })();\n  },[url])\n\n  return [ data, loading ];\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --backgroundCol: rgb(220,220,220);\n    --backgroundColBright: rgb(240,240,240);\n    --textCol: rgb(60,60,60);\n    --myGrey: rgb(190,190,190);\n    --boxShadow: 0 0 2px 2px rgba(0,0,0,0.1), 3px 3px 3px 3px rgba(0,0,0,0.2);\n    --pad: 2rem;\n    --borad: 2rem;\n    --maxWidth: 1200px;\n    --fz: 1rem;\n    --buttonWidth: 100px;\n    --buttonMargin: 0.5rem;\n    --textInputWidth: 200px;\n  }\n\n  html, body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background: var(--backgroundCol);\n    color: var(--textCol);\n    font-family: 'Raleway', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    display: flex;\n    justify-content: center;\n  }\n\n  @media screen and (max-width: 500px) {\n    :root {\n      --fz: 0.75rem;\n      --pad: 1rem;\n      --buttonWidth: 70px;\n      --textInputWidth: 170px;\n    }\n  }\n  @media screen and (max-width: 625px) {\n    :root {\n      --buttonMargin: 0rem 0rem 0.375rem 0rem;\n      --orderAssignEnd: 1;\n      --assignWidth100: 100%;\n    }\n  }\n`;\n\nconst AppStyles = styled.div`\n  width: 100vw;\n  height: 100vh;\n  max-width: var(--maxWidth);\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  grid-template-columns: 1fr;\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App AppStyles={AppStyles}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}